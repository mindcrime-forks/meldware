<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:buni="http://www.buni.org/flex/controls/qsimport"
     horizontalScrollPolicy="off" verticalScrollPolicy="off"
    creationComplete="initComp()">

  <mx:Metadata>
  [Event(name="cancelAdd")]
  [Event(name="cancelUpdate")]
  </mx:Metadata>
  
  <mx:Script>
  <![CDATA[
  	import org.buni.mail.webmail.model.ModelLocator;
  	import mx.utils.UIDUtil;
  	import mx.events.ItemClickEvent;
  
  import org.buni.mail.webmail.model.InviteVO;
  import org.buni.mail.webmail.model.CalendarEventVO;
  import org.buni.mail.webmail.model.CalendarInviteVO;
  import org.buni.mail.webmail.util.LabelUtil;
  import mx.collections.ArrayCollection;
  import mx.events.DragEvent;
  import mx.managers.DragManager;
  import mx.core.IUIComponent;
  import mx.utils.ObjectUtil;
  
  import com.adobe.cairngorm.control.CairngormEvent;
  import com.adobe.cairngorm.control.CairngormEventDispatcher;
  
  import org.buni.mail.webmail.controller.WebmailController;
  import org.buni.mail.webmail.model.ContactVO;

  [Bindable]
  private var _selectedEvent:CalendarEventVO;
  private var _isEdited:Boolean;
  private var _model:ModelLocator = ModelLocator.getInstance();

 
  public function initComp():void
  {
//  	this._model:ModelLocator = ModelLocator.getInstance();
    this.visible = false;
  	this.setSelectedEvent(null);
  	this.eventLocationInput.addEventListener(TextEvent.TEXT_INPUT,userEdit);
  	this.eventNoteInput.addEventListener(TextEvent.TEXT_INPUT,userEdit);
  	this.eventTitleInput.addEventListener(TextEvent.TEXT_INPUT,userEdit);
  }
  
  public function doCBar(event:ItemClickEvent):void {
  	//'Accept','Decline','Delete','Save','Cancel'
  	var label:String = event.label;
  	if (label == "Accept") {
  		this.doAccept();
  	} else if (label == "Decline") {
  		this.doDecline();
  	} else if (label == "Delete") {
  		this.doDelete();
  	} else if (label == "Save") {
  		this.doSave();
  	} else if (label == "Cancel") {
  		this.doCancel();
  	}
  }
  
  private function changed():void {
  	if (_selectedEvent == null) 
  	return;
    var start:Date = this._selectedEvent.start;
    var end:Date = this._selectedEvent.end;
  	this._selectedEvent.start = new Date(start.fullYearUTC,start.monthUTC, start.dateUTC, this.startTime.hour, this.startTime.minutes, 0, 0);
  	this._selectedEvent.end = new Date(end.fullYearUTC,end.monthUTC, end.dateUTC, this.endTime.hour, this.endTime.minutes, 0, 0);             
  }
  
  private function addInvite():void {
    var invite:CalendarInviteVO = new CalendarInviteVO()
    var start:Date = this._selectedEvent.start;
    var end:Date = this._selectedEvent.end;
  	start = new Date(start.fullYearUTC,start.monthUTC, start.dateUTC, 7, 0, 0, 0);
  	end = new Date(end.fullYearUTC,end.monthUTC, end.dateUTC, 18, 0, 0, 0);             

    invite.userName = this.invitee.text;
    invite.id = UIDUtil.getUID(invite);
    invite.isNew = true;
    
    this._selectedEvent.invites.addItem(invite);
    this.invitee.text = "";
    
    var e:CairngormEvent = new CairngormEvent(WebmailController.GET_FREEBUSY);
  	e.data = new Object();
  	e.data.start = start;
  	e.data.end = end;
  	e.data.invite = invite; 
  	CairngormEventDispatcher.getInstance().dispatchEvent(e);
  } 
  
  private function remove():void {
  	this._selectedEvent.invites.removeItemAt(inviteList.selectedIndex);
  	//todo uninvite handling
  }
  
  public function setSelectedEvent(selected:CalendarEventVO,isDirty:Boolean=false):void
  {
  	this._isEdited = isDirty;
    if(selected != null)
    {
        this._selectedEvent = selected;
        // make sure the invites collection is not null
        if(this._selectedEvent.invites == null)
            this._selectedEvent.invites == new ArrayCollection();        

        var e:CairngormEvent = null;
        
        for each (var invite:CalendarInviteVO in this._selectedEvent.invites)
        {
        	var e:CairngormEvent = new CairngormEvent(WebmailController.GET_FREEBUSY);
	  	    e.data = new Object();
	  	    e.data.start = selected.start;
	  	    e.data.end = selected.end;
	  	    e.data.invite = invite; 
  	        CairngormEventDispatcher.getInstance().dispatchEvent(e);
      	    //selectedEvent.invites.addItem(invite);
        }
        this.eventStatus.selectedIndex = this._selectedEvent.status;
		this.visible = true;
    }
    else
    {
    	this._selectedEvent = null;
    	this.eventStatus.text = "";
    	this.visible = false;
       // this.currentState = "unselected";
    }
    dispatchEvent(new Event("editedEventChanged"));
  }

  [Bindable(event="editedEventChanged")]
  public function get selectedEvent():CalendarEventVO
  {
    return _selectedEvent;
  }
  
  public function userEdit(event:Event):void
  {
  	this._isEdited = true;
  }
  
  private function doSave():void
  {  	
    var e:CairngormEvent;
    var clone:CalendarEventVO = this._selectedEvent.clone();
    
    clone.location = this.eventLocationInput.text;
    clone.description = this.eventNoteInput.text;
    clone.summary = this.eventTitleInput.text;
    clone.status = this.eventStatus.selectedIndex;
    
  	//here we will have to make a decision wheter update or create
  	// now it is just create
  	if (selectedEvent.isNew)
  	{

      e = new CairngormEvent(WebmailController.CREATE_EVENT);
      e.data = clone;
    }
    else
    {
      var request:ArrayCollection = new ArrayCollection();
      request.addItem(clone);
      request.addItem(this._selectedEvent.invites);
      e = new CairngormEvent(WebmailController.SAVE_EVENT);
      e.data = request;
    }    
    CairngormEventDispatcher.getInstance().dispatchEvent(e);
	// blank out
	this.setSelectedEvent(null);
  }
  
  private function doDelete():void
  {
  	changeInviteStatus(CalendarInviteVO.CANCELED);
  }
  
  private function doAccept():void
  {
  	changeInviteStatus(CalendarInviteVO.ACCEPTED);
  }
  
  private function doDecline():void
  {
  	changeInviteStatus(CalendarInviteVO.DECLINED);
  }
  
  private function changeInviteStatus(status:Number):void
  {
  	var e:CairngormEvent = new CairngormEvent(WebmailController.RSVP_INVITE);
  	var invite:CalendarInviteVO = _selectedEvent.currentUserInvite;
  	invite.status = status;
  	e.data = invite;
  	CairngormEventDispatcher.getInstance().dispatchEvent(e);
	// blank out
	this.setSelectedEvent(null);
  }
  
  private function doCancel():void
  {
  	if(selectedEvent.isNew){
		dispatchEvent(new Event("cancelAdd"));}
	else{
		dispatchEvent(new Event("cancelUpdate"));}
  }
  
  private function formatInvite(item:Object):String 
  {
      return item.userName + "[" + item.formatStatus() + "]"; 
  }
  
    
  ]]>
  </mx:Script>

  <mx:Form id="inviteForm" width="100%" styleName="calendarsContainer">
      <mx:FormItem label="Time">
      <mx:HBox>
        <buni:TimePicker id="startTime" twelveHour="false" hour="{_selectedEvent.start.hours}" minutes="{_selectedEvent.start.minutes}" onChange="changed()"/>
        <mx:Label text="to"/>
        <buni:TimePicker id="endTime" twelveHour="false" hour="{_selectedEvent.end.hours}" minutes="{_selectedEvent.end.minutes}" onChange="changed()"/>
      </mx:HBox>
    </mx:FormItem>
      <mx:FormItem label="Title">
	     <mx:TextInput id="eventTitleInput" text="{_selectedEvent.summary}" width="100%"/>
	  </mx:FormItem>
	  <mx:FormItem label="Location">
	     <mx:TextInput id="eventLocationInput" text="{_selectedEvent.location}" width="100%"/>
	  </mx:FormItem>
	  <mx:FormItem label="Event Status">
	  	<mx:ComboBox id="eventStatus" selectedIndex="{_selectedEvent.status}" dataProvider="{this._model.status.statusValues}" editable="false" width="100%"/>
	  </mx:FormItem>
	<mx:FormItem label="Invites">
      <mx:HBox>
        <mx:TextInput id="invitee" text="" width="100%"/>
        <mx:Button id="invite" label="Invite" click="addInvite()" enabled="true"/>             
      </mx:HBox>
    </mx:FormItem>
    <mx:Canvas id="inviteCanvas" width="100%" height="100%" verticalScrollPolicy="off">
      <mx:DataGrid id="inviteList" minWidth="1300" width="100%" minHeight="150" height="100%" borderStyle="none" dataProvider="{_selectedEvent.invites}">
        <mx:columns>
          <mx:DataGridColumn width="100" headerText="attendee" dataField="userName"/>
          <mx:DataGridColumn width="100" headerText="status" editable="false" dataField="formattedStatus"/> 
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="7:00" dataField="interval1"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="7:30" dataField="interval2"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="8:00" dataField="interval3"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="8:30" dataField="interval4"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="9:00" dataField="interval5"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="9:30" dataField="interval6"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="10:00" dataField="interval7"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="10:30" dataField="interval8"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="11:00" dataField="interval9"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="11:30" dataField="interval10"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="12:00" dataField="interval11"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="12:30" dataField="interval12"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="13:00" dataField="interval13"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="13:30" dataField="interval14"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="14:00" dataField="interval15"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="14:30" dataField="interval16"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="15:00" dataField="interval17"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="15:30" dataField="interval18"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="16:00" dataField="interval19"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="16:30" dataField="interval20"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="17:00" dataField="interval21"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="17:30" dataField="interval22"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="18:00" dataField="interval23"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="18:30" dataField="interval24"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="19:00" dataField="interval25"/>
          <mx:DataGridColumn width="40" itemRenderer="org.buni.mail.webmail.view.renderer.DGItemRenderer" headerText="19:30" dataField="interval26"/>
        </mx:columns>
      </mx:DataGrid>
    </mx:Canvas>	  
	
    <mx:Button id="removeInvite" label="Remove" click="remove()"/>
	  
	  <mx:TextArea id="eventNoteInput" text="{_selectedEvent.description}" width="100%" height="100%"/>
	  <mx:ButtonBar id="cBar" dataProvider="{['Accept','Decline','Delete','Save','Cancel']}" itemClick="doCBar(event)"/>

  </mx:Form>

</mx:VBox>
